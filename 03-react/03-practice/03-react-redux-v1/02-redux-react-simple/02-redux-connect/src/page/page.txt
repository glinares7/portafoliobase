// import { useDispatch, useSelector } from "react-redux";
import { Component } from "react";
import { connect } from "react-redux";
import { Link } from "react-router-dom";
import { store } from "../../02-redux-connect/src/index";

class App extends Component {
  state = {
    username: "",
  };

  handleUser = (e) => {
    this.setState({ username: e.target.value });
  };

  addUser = () => {
    console.log("addUser", this.state.username);
    this.props.addUser(this.state.username);
  };

  render() {
    const unsubscribe = store.subscribe(() => {
      // vemos el nuevo store
      console.log("suscribe watch", store.getState());
      // nos desuscribimos
      unsubscribe();
    });
    console.log("props", this.props);
    return (
      <div>
        <input
          type="text"
          value={this.state.username}
          onChange={this.handleUser}
        />
        <button onClick={this.addUser}>Add user</button>
        <ul>
          {this.props.users.map((user, index) => (
            <li key={index}>{user}</li>
          ))}
        </ul>
        <hr />
        <Link to="somes">USE REDUCERS</Link>
      </div>
    );
  }
}

const mapStateToProps = (state, ownProps) => {
  console.log("state", state);
  const usersWithFoo = state.filter((user) =>
    user.includes(ownProps.searchText)
  );
  return {
    users: state,
    usersWithFoo,
  };
};

const addUser = (username) => {
  return { type: "ADD_USER", payload: username };
};

const mapDispatchToProps = {
  addUser,
};

export default connect(mapStateToProps, mapDispatchToProps)(App);
